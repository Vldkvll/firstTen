{"version":3,"sources":["components/movie-items/movie-items.module.css","components/App.module.css","components/search-field/search-field.module.css","components/movie-items/movie-items-components/movie-item-card.js","components/movie-items/movie-items-components/movie -mov-item-card.jsx","components/API/api.js","components/search-field/search-field.jsx","components/movie-tabs/movie-tabs.jsx","components/nav-bar/nav-bar.jsx","components/Utils/pagination.jsx","components/movie-items/movie-items.jsx","components/App.js","serviceWorker.js","index.js","components/movie-tabs/movie-tabs.module.css"],"names":["module","exports","MovieItemsCard","title","overview","poster_path","vote_average","id","getIdMovies","release_date","useState","show","setStateShow","like","setStateLike","delMovie","setStateDelMovie","className","cs","mainItemsElement","style","width","src","alt","onClick","buttonArea","btnTrue","movIdArray","movIdArrayGet","MovieMovItemsCard","API_KEY_3","iniMovieApi","axios","create","baseURL","UserApi","then","response","data","page","searchFilm","SearchField","onGetSearchFile","onChangeFieldSearchFile","onSubmit","onChange","formInput","type","placeholder","MovieTabs","onGetChoose","active","containerTabs","buttonChangeColor","NavBar","Pagination","nextPage","totalListOfPages","currentPage","met","portionSize","portionCount","Math","ceil","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","pageLinks","i","items","filter","p","map","key","href","MovieItems","state","movies","idMov","counter","choise","searchFile","totalMovies","e","setState","target","innerText","a","preventDefault","responseData","results","total_results","value","movMovie","upMovMovie","countAdd","mett","parseInt","responsePopData","responseRevData","responseVData","responseRelData","this","prevProps","prevState","length","filterState","elem","indexOf","movieElements","postElem","movieMovElements","mainItems","containerSearch","mainTabsHeader","pageDoze","mainItemsElementMov","mainTabsFooter","React","Component","App","app","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9e0d1d2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainItems\":\"movie-items_mainItems__KIZEt\",\"containerSearch\":\"movie-items_containerSearch__HUZwc\",\"mainTabsHeader\":\"movie-items_mainTabsHeader__2ad_j\",\"mainTabsFooter\":\"movie-items_mainTabsFooter__RqQ8i\",\"mainItemsElement\":\"movie-items_mainItemsElement__31kL9\",\"mainItemsElementMov\":\"movie-items_mainItemsElementMov__whMiF\",\"buttonArea\":\"movie-items_buttonArea__2Vhkq\",\"btnTrue\":\"movie-items_btnTrue__1lqo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2l_Lv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"search-field_formInput__2UKR4\"};","import React, {useState} from \"react\";\r\nimport cs from \"../../movie-items/movie-items.module.css\"\r\n\r\nconst MovieItemsCard = ({title, overview, poster_path, vote_average, id, getIdMovies, release_date}) => {\r\n\r\n    const [show, setStateShow] = useState(false);\r\n    const [like, setStateLike] = useState(false);\r\n    const [delMovie, setStateDelMovie] = useState(true);\r\n\r\n    const onMyShowButtonHandler = () => {\r\n        setStateShow(!show)\r\n\r\n    };\r\n    const onHandlerLike = () => {\r\n        setStateLike(!like)\r\n    };\r\n\r\n    const movIdArrayGet = () => {\r\n        let movIdArray = [];\r\n        return () => {\r\n            setStateDelMovie(!delMovie);\r\n            movIdArray = [...movIdArray, id];\r\n            getIdMovies(movIdArray);\r\n        };\r\n    }\r\n    if (delMovie) {\r\n        return (\r\n            <div className={`${cs.mainItemsElement}`}>\r\n                <div className=\"card\" style={{width: \"16rem\"}}>\r\n                    <img className=\"card-img-top\" src={poster_path} alt={title}/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{title}</h5>\r\n                        <h6 className=\"card-title\">IMDb: {vote_average}</h6>\r\n                        <span className=\"card-title\">Release:  {release_date}</span>\r\n                        <div>\r\n                            <button className={`btn btn-outline-info btn-sm mt-1`}\r\n                                    onClick={onMyShowButtonHandler}>{show ? \"HIDE\" : \"SHOW\"}</button>\r\n                            {show ? <div><p className={`card-text `}>{overview}</p></div> : null}\r\n                            <div className={`${cs.buttonArea}`}>\r\n                                <button onClick={onHandlerLike}\r\n                                        className={like ? `btn btn-success btn-sm ${cs.btnTrue} ` : \"btn btn-outline-warning btn-sm\"}>\r\n                                    LIKE\r\n                                </button>\r\n\r\n                                <button onClick={movIdArrayGet()}\r\n                                        className={`btn btn-danger btn-sm`}>\r\n                                    WATCH\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\nexport default MovieItemsCard","import React, {useState} from \"react\";\r\nimport cs from \"../../movie-items/movie-items.module.css\"\r\n\r\nconst MovieMovItemsCard = ({title, overview, poster_path, vote_average, id}) => {\r\n\r\n    const [show, setStateShow] = useState(false);\r\n    const [like, setStateLike] = useState(false);\r\n    // const [delMovie, setStateDelMovie] = useState(true);\r\n    // const [movMovie, setStateMovMovie] = useState([]);\r\n\r\n    const onMyShowButtonHandler = () => {\r\n        setStateShow(!show)\r\n\r\n    };\r\n    const onHandlerLike = () => {\r\n        setStateLike(!like)\r\n    };\r\n    // const onHandlerMoveMovie = () => {\r\n    //     setStateDelMovie(!delMovie)\r\n    //     setStateMovMovie([...movMovie, id])\r\n    // };\r\n\r\n    // if (delMovie) {\r\n        return (\r\n            <div className={`${cs.mainItemsElement}`}>\r\n                <div className=\"card\" style={{width: \"14rem\"}}>\r\n                    <img className=\"card-img-top\" src={poster_path} alt={title}/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{title}</h5>\r\n                        <h6 className=\"card-title\">IMDb: {vote_average}</h6>\r\n                        <div>\r\n                            <button className={`btn btn-outline-info btn-sm`}\r\n                                    onClick={onMyShowButtonHandler}>{show ? \"HIDE\" : \"SHOW\"}</button>\r\n                            {show ? <div><p className={`card-text `}>{overview}</p></div> : null}\r\n                            <div className={`${cs.buttonArea}`}>\r\n                                <button onClick={onHandlerLike}\r\n                                        className={like ? `btn btn-success btn-sm ${cs.btnTrue} ` : \"btn btn-outline-warning btn-sm\"}>\r\n                                    LIKE\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    // } else {\r\n    //     return null\r\n    // }\r\n    // ;\r\n\r\n};\r\nexport default MovieMovItemsCard;","import axios from 'axios';\r\n\r\nexport const API_KEY_3 = \"d7f2bc2d578c8e26c1660fb71abe50bf\";\r\n\r\nexport const API_KEY_4 =\r\n    \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkN2YyYmMyZDU3OGM4ZTI2YzE2NjBmYjcxYWJlNTBiZiIsInN1YiI6IjVlOTA3M2JjZTY0MGQ2MDAxMzFmMWI4MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CGIiDBCrUIpmntX9NTmDltAbx4PnwTQZVLPVR2cY1ng\";\r\n\r\nconst iniMovieApi = axios.create({\r\n    baseURL: `https://api.themoviedb.org/3/`,\r\n})\r\n\r\nexport const UserApi = {\r\n    getMoviesProfile: () => {\r\n        return iniMovieApi(\r\n            `discover/movie?api_key=${API_KEY_3}`\r\n        ).then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    getSortPopularityMovies: (page=1) => {\r\n        return iniMovieApi(\r\n            `discover/movie?api_key=${API_KEY_3}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    getSortRevenueMoviesProfile: (page=1) => {\r\n        return iniMovieApi(`discover/movie?api_key=${API_KEY_3}&language=en-US&sort_by=revenue.desc&include_adult=false&include_video=false&page=${page}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    getSortVoteAverageMoviesProfile: (page=1) => {\r\n        return iniMovieApi(`discover/movie?api_key=${API_KEY_3}&language=en-US&sort_by=vote_average.desc&include_adult=false&include_video=false&page=${page}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    getSortReleaseMoviesProfile: (page=1) => {\r\n        return iniMovieApi(`discover/movie?api_key=${API_KEY_3}&language=en-US&sort_by=release_date.asc&include_adult=false&include_video=false&page=${page}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    getSearchMovies: (searchFilm, page=1) => {\r\n        return iniMovieApi(\r\n            `search/movie?api_key=${API_KEY_3}&query=${searchFilm}&page=${page}`\r\n        )\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nimport cs from \"./search-field.module.css\"\r\n\r\nconst SearchField = ({onGetSearchFile, onChangeFieldSearchFile}) => {\r\n\r\n    return (\r\n            <form onSubmit={onGetSearchFile} onChange={onChangeFieldSearchFile} className={`form-inline my-2 my-lg-0 ${cs.formInput}`}>\r\n                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\"/>\r\n                <button  className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n    )\r\n};\r\n\r\nexport default SearchField;","import React from \"react\";\r\nimport cs from \"./movie-tabs.module.css\"\r\n\r\nconst MovieTabs = ({onGetChoose, active}) => {\r\n\r\n\r\n    return (\r\n        <ul className={`navbar-nav mr-auto ${cs.containerTabs}`}>\r\n            <li className={`nav-item`}>\r\n                <div className={`nav-link ${cs.buttonChangeColor} ${active===\"1\" ? \"active\": \"\"}`}\r\n                     onClick={onGetChoose}>\r\n                    Popularity\r\n                </div>\r\n            </li>\r\n            <li className={`nav-item`}>\r\n                <div className={`nav-link ${cs.buttonChangeColor} ${active===\"2\" ? \"active\": \"\"}`}\r\n                     onClick={onGetChoose}>\r\n                    Revenue\r\n                </div>\r\n            </li>\r\n            <li className={`nav-item`}>\r\n                <div className={`nav-link ${cs.buttonChangeColor} ${active===\"3\" ? \"active\": \"\"}`}\r\n                     onClick={onGetChoose}>\r\n                    Vote average\r\n                </div>\r\n            </li>\r\n            <li className={`nav-item`}>\r\n                <div className={`nav-link ${cs.buttonChangeColor} ${active===\"4\" ? \"active\": \"\"}`}\r\n                     onClick={onGetChoose}>\r\n                    Release\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MovieTabs;","import React from \"react\";\r\nimport SearchField from \"../search-field/search-field\";\r\nimport MovieTabs from \"../movie-tabs/movie-tabs\";\r\n\r\nconst NavBar = ({onGetChoose, active, onGetSearchFile, onChangeFieldSearchFile}) => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n               <MovieTabs  active={active}\r\n                           onGetChoose={onGetChoose} />\r\n                <SearchField\r\n                    onGetSearchFile={onGetSearchFile}\r\n                    onChangeFieldSearchFile={onChangeFieldSearchFile}/>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst Pagination = ({nextPage, totalListOfPages, currentPage, met, portionSize = 20}) => {\r\n\r\n    let portionCount = Math.ceil(totalListOfPages / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(1)\r\n    }, [met])\r\n\r\n    let pageLinks = [];\r\n    for (let i = 1; i <= totalListOfPages; i++) {\r\n        pageLinks = [...pageLinks, i]\r\n    }\r\n\r\n    let items = pageLinks.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n        .map((i) => {\r\n            let active = currentPage === i ? 'active' : null\r\n            return (\r\n                <li className={`page-item ${active}`}\r\n                    key={i}\r\n                    onClick={() => nextPage(i, met)}\r\n                >\r\n                    <a className={`page-link`} href=\"#\">{i}</a>\r\n                </li>)\r\n        })\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"pagination\">\r\n                <li className={`page-item`}>\r\n                    {portionNumber > 1 &&\r\n                    <a onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }} className=\"page-link\" href=\"#\">&laquo;</a>\r\n                    }\r\n                </li>\r\n                {items}\r\n                <li className=\"page-item\">\r\n                    {portionCount > portionNumber &&\r\n                    <a onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }} className=\"page-link\" href=\"#\">&raquo;</a>\r\n                    }\r\n                    </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport MovieItemsCard from \"./movie-items-components/movie-item-card\";\r\nimport cs from \"./movie-items.module.css\"\r\nimport MovieMovItemsCard from \"./movie-items-components/movie -mov-item-card\";\r\nimport {UserApi} from \"../API/api\";\r\nimport NavBar from \"../nav-bar/nav-bar\";\r\nimport Pagination from \"../Utils/pagination\";\r\n\r\nclass MovieItems extends React.Component {\r\n    state = {\r\n        movies: null,\r\n        idMov: [],\r\n        counter: 0,\r\n        choise: '',\r\n        active: 'yo',\r\n        searchFile: '',\r\n        totalMovies: 0,\r\n        currentPage: 1,\r\n        met: ''\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const responseData = await UserApi.getMoviesProfile();\r\n        this.setState({\r\n            movies: responseData.results,\r\n            totalMovies: responseData.total_results,\r\n            active: 1\r\n\r\n        })\r\n    };\r\n\r\n    onGetChoose = (e) => {\r\n        this.setState({\r\n            choise: e.target.innerText,\r\n        });\r\n    };\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n\r\n        if ( prevState.choise !== this.state.choise) {\r\n            if (this.state.choise === \"Popularity\") {\r\n                const responsePopData = await UserApi.getSortPopularityMovies();\r\n                await this.setState({\r\n                    movies: responsePopData.results,\r\n                    active: 1,\r\n                    totalMovies: responsePopData.total_results,\r\n                    currentPage: 1,\r\n                    counter: 0\r\n\r\n                });\r\n            } else if (this.state.choise === \"Revenue\") {\r\n                const responseRevData = await UserApi.getSortRevenueMoviesProfile();\r\n                this.setState({\r\n                    movies: responseRevData.results,\r\n                    active: 2,\r\n                    totalMovies: responseRevData.total_results,\r\n                    currentPage: 1,\r\n                    counter: 0\r\n                });\r\n            } else if (this.state.choise === \"Vote average\") {\r\n                const responseVData = await UserApi.getSortVoteAverageMoviesProfile();\r\n                this.setState({\r\n                    movies: responseVData.results,\r\n                    active: 3,\r\n                    totalMovies: responseVData.total_results,\r\n                    currentPage: 1,\r\n                    counter: 0\r\n                });\r\n            } else if (this.state.choise === \"Release\") {\r\n                const responseRelData = await UserApi.getSortReleaseMoviesProfile();\r\n                this.setState({\r\n                    movies: responseRelData.results,\r\n                    active: 5,\r\n                    totalMovies: responseRelData.total_results,\r\n                    currentPage: 1,\r\n                    counter: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onGetSearchFile = async (e) => {\r\n        e.preventDefault()\r\n        const responseData = await UserApi.getSearchMovies(this.state.searchFile);\r\n        this.setState({\r\n            movies: responseData.results,\r\n            totalMovies: responseData.total_results,\r\n            active: 4\r\n        })\r\n    };\r\n\r\n    onChangeFieldSearchFile = (e) => {\r\n        this.setState({searchFile: e.target.value})\r\n    };\r\n\r\n    getIdMovies = (movMovie = 0) => {\r\n        const upMovMovie = [...this.state.idMov, ...movMovie];\r\n        const countAdd = this.state.counter + 1;\r\n        this.setState({\r\n            idMov: upMovMovie,\r\n            counter: countAdd\r\n        });\r\n    };\r\n\r\n    nextPage = async (page, met) => {\r\n        let mett = parseInt(met, 10)\r\n        if (mett === 4) {\r\n            const responseData = await UserApi.getSearchMovies(this.state.searchFile, page);\r\n            this.setState({\r\n                movies: responseData.results,\r\n                currentPage: page\r\n            })\r\n        } else if (mett === 1) {\r\n            const responsePopData = await UserApi.getSortPopularityMovies(page);\r\n            await this.setState({\r\n                movies: responsePopData.results,\r\n                currentPage: page\r\n            })\r\n        } else if (mett === 2) {\r\n            const responseRevData = await UserApi.getSortRevenueMoviesProfile(page);\r\n            await this.setState({\r\n                movies: responseRevData.results,\r\n                currentPage: page\r\n            })\r\n        } else if (mett === 3) {\r\n            const responseVData = await UserApi.getSortVoteAverageMoviesProfile(page);\r\n            await this.setState({\r\n                movies: responseVData.results,\r\n                currentPage: page\r\n            })\r\n        } else if (mett === 5) {\r\n            const responseRelData = await UserApi.getSortReleaseMoviesProfile(page);\r\n            this.setState({\r\n                movies: responseRelData.results,\r\n                currentPage: page\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const totalListOfPages = Math.ceil(this.state.totalMovies / 20);\r\n        const state = this.state.movies;\r\n        if (!state || state.length === 0 ) {\r\n            return <div>Loading ...</div>\r\n        }\r\n        const filterState = state.filter(elem => {\r\n            if (!elem) return false\r\n            if (this.state.idMov.indexOf(elem.id) != -1) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        let movieElements = state.map(postElem =>{\r\n        if (!postElem) return false\r\n            return (\r\n                <MovieItemsCard\r\n                    title={postElem.title}\r\n                    overview={postElem.overview}\r\n                    vote_average={postElem.vote_average}\r\n                    release_date={postElem.release_date}\r\n                    poster_path={`https://image.tmdb.org/t/p/w500${postElem.poster_path}`}\r\n                    getIdMovies={this.getIdMovies}\r\n                    key={postElem.id}\r\n                    id={postElem.id}/>\r\n            )});\r\n\r\n        const movieMovElements = filterState.map(postElem =>\r\n            (\r\n                <MovieMovItemsCard\r\n                    title={postElem.title}\r\n                    overview={postElem.overview}\r\n                    vote_average={postElem.vote_average}\r\n                    poster_path={`https://image.tmdb.org/t/p/w500${postElem.poster_path}`}\r\n                    getIdMovies={this.getIdMovies}\r\n                    key={postElem.id}\r\n                    id={postElem.id}/>\r\n            ));\r\n\r\n        return (\r\n            <div className={cs.mainItems}>\r\n\r\n                <div className={`${cs.containerSearch}`}>\r\n                    <NavBar\r\n                        active={this.state.active}\r\n                        onGetChoose={this.onGetChoose}\r\n                        onChangeFieldSearchFile={this.onChangeFieldSearchFile}\r\n                        onGetSearchFile={this.onGetSearchFile}\r\n                    />\r\n                </div>\r\n               <div className={cs.mainTabsHeader}>\r\n                   {this.state.totalMovies > 20 ? <Pagination\r\n                       nextPage={this.nextPage}\r\n                       totalListOfPages={totalListOfPages}\r\n                       currentPage={this.state.currentPage}\r\n                       met={this.state.active}\r\n                       pageDoze={this.pageDoze}\r\n                   /> : null}\r\n               </div>\r\n\r\n                <div className={`card-deck  ${cs.mainItemsElement}`}>\r\n                    {movieElements}\r\n                </div>\r\n                <div className={` ${cs.mainItemsElementMov}`}>\r\n                    <p>\r\n                        Will Watch: {this.state.counter}\r\n                    </p>\r\n                    <div>\r\n                        {movieMovElements}\r\n                    </div>\r\n                </div>\r\n                <div className={cs.mainTabsFooter}>\r\n                    {/*{this.state.totalMovies > 20 ? <Pagination*/}\r\n                    {/*    nextPage={this.nextPage}*/}\r\n                    {/*    totalListOfPages={totalListOfPages}*/}\r\n                    {/*    currentPage={this.state.currentPage}*/}\r\n                    {/*    met={`Popularity`}*/}\r\n                    {/*    pageDoze={this.pageDoze}*/}\r\n                    {/*/> : null}*/}\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieItems;","import React from 'react';\nimport cs from './App.module.css';\nimport MovieItems from \"./movie-items/movie-items\";\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div className={cs.app}>\n\n                <MovieItems />\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerTabs\":\"movie-tabs_containerTabs__3cHll\",\"buttonChangeColor\":\"movie-tabs_buttonChangeColor__EMUU3\"};"],"sourceRoot":""}